commit 26d6c76d5a51504ebabec5f4ea2643069743f962
Author: Boudewijn Rempt <boud@valdyas.org>
Date:   Sat Nov 4 14:15:25 2017 +0100

    Fix macdeployqt

diff --git a/qttools/src/macdeployqt/macdeployqt/main.cpp b/qttools/src/macdeployqt/macdeployqt/main.cpp
index 5488a5f..1e90c72 100644
--- a/qttools/src/macdeployqt/macdeployqt/main.cpp
+++ b/qttools/src/macdeployqt/macdeployqt/main.cpp
@@ -53,6 +53,7 @@ int main(int argc, char **argv)
         qDebug() << "   -codesign=<ident>  : Run codesign with the given identity on all executables";
         qDebug() << "   -appstore-compliant: Skip deployment of components that use private API";
         qDebug() << "   -libpath=<path>    : Add the given path to the library search path";
+        qDebug() << "   -extra-plugins=<d> : Deploy plugins from given extra directory";
         qDebug() << "";
         qDebug() << "macdeployqt takes an application bundle as input and makes it";
         qDebug() << "self-contained by copying in the Qt frameworks and plugins that";
@@ -94,6 +95,7 @@ int main(int argc, char **argv)
     extern QString codesignIdentiy;
     extern bool appstoreCompliant;
     extern bool deployFramework;
+    QStringList extraPluginDirectories;
 
     for (int i = 2; i < argc; ++i) {
         QByteArray argument = QByteArray(argv[i]);
@@ -162,6 +164,14 @@ int main(int argc, char **argv)
             LogDebug() << "Argument found:" << argument;
             deployFramework = true;
 
+         } else if (argument.startsWith(QByteArray("-extra-plugins"))) {
+             LogDebug() << "Argument found:" << argument;
+             int index = argument.indexOf('=');
+             if (index == -1)
+                 LogError() << "Missing extra plugins directory";
+             else
+                 extraPluginDirectories << argument.mid(index+1);
+
         } else if (argument.startsWith("-")) {
             LogError() << "Unknown argument" << argument << "\n";
             return 1;
@@ -192,10 +202,13 @@ int main(int argc, char **argv)
         deploymentInfo.deployedFrameworks = deploymentInfo.deployedFrameworks.toSet().toList();
     }
 
-    if (plugins && !deploymentInfo.qtPath.isEmpty()) {
+    if ((plugins && !deploymentInfo.qtPath.isEmpty()) || !extraPluginDirectories.isEmpty()) {
         deploymentInfo.pluginPath = deploymentInfo.qtPath + "/plugins";
         LogNormal();
-        deployPlugins(appBundlePath, deploymentInfo, useDebugLibs);
+        if (plugins && !deploymentInfo.qtPath.isEmpty())
+            deployPlugins(appBundlePath, deploymentInfo, useDebugLibs);
+        if (!extraPluginDirectories.isEmpty())
+            deployExtraPlugins(appBundlePath, deploymentInfo, useDebugLibs, extraPluginDirectories);
         createQtConf(appBundlePath);
     }
 
diff --git a/qttools/src/macdeployqt/shared/shared.cpp b/qttools/src/macdeployqt/shared/shared.cpp
index 9575090..477f7a0 100644
--- a/qttools/src/macdeployqt/shared/shared.cpp
+++ b/qttools/src/macdeployqt/shared/shared.cpp
@@ -1120,6 +1120,43 @@ void deployPlugins(const ApplicationBundleInfo &appBundleInfo, const QString &pl
     }
 }
 
+void deployExtraPlugins(const ApplicationBundleInfo &appBundleInfo,
+        const QString pluginDestinationPath, DeploymentInfo deploymentInfo, bool useDebugLibs, const QStringList &extraPluginDirectories)
+{
+    foreach (const QString &extraPluginDir, extraPluginDirectories) {
+        LogNormal() << "Deploying plugins from" << extraPluginDir;
+
+        // search for dylib and so files, both work as plugins on mac os
+        QDir dir(extraPluginDir);
+        dir.setFilter(QDir::Files);
+        dir.setNameFilters(QStringList() << "*.dylib" << "*.so");
+        QDirIterator dirIterator(dir, QDirIterator::Subdirectories);
+        QStringList pluginList;
+        while (dirIterator.hasNext()) {
+            dirIterator.next();
+            if (!QFileInfo(dirIterator.filePath()).isFile())
+                continue;
+            pluginList.append(dir.relativeFilePath(dirIterator.filePath()));
+        }
+
+        // deploy all found plugins
+        foreach (const QString &plugin, pluginList) {
+            QString sourcePath = extraPluginDir + "/" + plugin;
+            const QString destinationPath = pluginDestinationPath + "/" + plugin;
+            QDir dir;
+            dir.mkpath(QFileInfo(destinationPath).path());
+
+            if (copyFilePrintStatus(sourcePath, destinationPath)) {
+                runStrip(destinationPath);
+
+                QList<FrameworkInfo> frameworks = getQtFrameworks(destinationPath, appBundleInfo.path, deploymentInfo.rpathsUsed, useDebugLibs);
+                deployQtFrameworks(frameworks, appBundleInfo.path, QStringList() << destinationPath, useDebugLibs, deploymentInfo.useLoaderPath);
+
+            }
+        }
+    }
+}
+
 void createQtConf(const QString &appBundlePath)
 {
     // Set Plugins and imports paths. These are relative to App.app/Contents.
@@ -1161,6 +1198,16 @@ void deployPlugins(const QString &appBundlePath, DeploymentInfo deploymentInfo,
     deployPlugins(applicationBundle, deploymentInfo.pluginPath, pluginDestinationPath, deploymentInfo, useDebugLibs);
 }
 
+void deployExtraPlugins(const QString &appBundlePath, DeploymentInfo deploymentInfo, bool useDebugLibs, const QStringList &extraPluginDirectories)
+{
+    ApplicationBundleInfo applicationBundle;
+    applicationBundle.path = appBundlePath;
+    applicationBundle.binaryPath = findAppBinary(appBundlePath);
+
+    const QString pluginDestinationPath = appBundlePath + "/" + "Contents/PlugIns";
+    deployExtraPlugins(applicationBundle, pluginDestinationPath, deploymentInfo, useDebugLibs, extraPluginDirectories);
+}
+
 void deployQmlImport(const QString &appBundlePath, const QSet<QString> &rpaths, const QString &importSourcePath, const QString &importName)
 {
     QString importDestinationPath = appBundlePath + "/Contents/Resources/qml/" + importName;
diff --git a/qttools/src/macdeployqt/shared/shared.h b/qttools/src/macdeployqt/shared/shared.h
index c173846..cceac3a 100644
--- a/qttools/src/macdeployqt/shared/shared.h
+++ b/qttools/src/macdeployqt/shared/shared.h
@@ -116,6 +116,7 @@ DeploymentInfo deployQtFrameworks(const QString &appBundlePath, const QStringLis
 DeploymentInfo deployQtFrameworks(QList<FrameworkInfo> frameworks,const QString &bundlePath, const QStringList &binaryPaths, bool useDebugLibs, bool useLoaderPath);
 void createQtConf(const QString &appBundlePath);
 void deployPlugins(const QString &appBundlePath, DeploymentInfo deploymentInfo, bool useDebugLibs);
+void deployExtraPlugins(const QString &appBundlePath, DeploymentInfo deploymentInfo, bool useDebugLibs, const QStringList &extraPluginDirectories);
 bool deployQmlImports(const QString &appBundlePath, DeploymentInfo deploymentInfo, QStringList &qmlDirs);
 void changeIdentification(const QString &id, const QString &binaryPath);
 void changeInstallName(const QString &oldName, const QString &newName, const QString &binaryPath);
